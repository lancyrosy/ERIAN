cmake_minimum_required (VERSION 3.2)

set (TARGET_FMU "add_client")
project (${TARGET_FMU})
set (FMU_BINARY_DIR "win64")

message(STATUS "TARGET_FMU: ${TARGET_FMU}")
message(STATUS "CMAKE_CURRENT_SOURCE_DIR: ${CMAKE_CURRENT_SOURCE_DIR}")
message(STATUS "CMAKE_CURRENT_BINARY_DIR: ${CMAKE_CURRENT_BINARY_DIR}")
message(STATUS "--")
message(STATUS "CATKIN_PACKAGE_LIB_DESTINATION: ${CATKIN_PACKAGE_LIB_DESTINATION}")
message(STATUS "CATKIN_GLOBAL_BIN_DESTINATION: ${CATKIN_GLOBAL_BIN_DESTINATION}")
message(STATUS "--")
message(STATUS "CATKIN_PACKAGE_BIN_DESTINATION: ${CATKIN_PACKAGE_BIN_DESTINATION}")
message(STATUS "CATKIN_PACKAGE_ETC_DESTINATION: ${CATKIN_PACKAGE_ETC_DESTINATION}")
message(STATUS "CATKIN_PACKAGE_INCLUDE_DESTINATION: ${CATKIN_PACKAGE_INCLUDE_DESTINATION}")
message(STATUS "CATKIN_PACKAGE_LIB_DESTINATION: ${CATKIN_PACKAGE_LIB_DESTINATION}")
message(STATUS "CATKIN_PACKAGE_SHARE_DESTINATION: ${CATKIN_PACKAGE_SHARE_DESTINATION}")
message(STATUS "--")
message(STATUS "CATKIN_GLOBAL_BIN_DESTINATION: ${CATKIN_GLOBAL_BIN_DESTINATION}")
message(STATUS "CATKIN_GLOBAL_ETC_DESTINATION: ${CATKIN_GLOBAL_ETC_DESTINATION}")
message(STATUS "CATKIN_GLOBAL_LIB_DESTINATION: ${CATKIN_GLOBAL_LIB_DESTINATION}")
message(STATUS "CATKIN_GLOBAL_LIBEXEC_DESTINATION: ${CATKIN_GLOBAL_LIBEXEC_DESTINATION}")
message(STATUS "CATKIN_GLOBAL_SHARE_DESTINATION: ${CATKIN_GLOBAL_SHARE_DESTINATION}")
message(STATUS "--")
message(STATUS "CATKIN_ENV: ${CATKIN_ENV}")
message(STATUS "CATKIN_DEVEL_PREFIX: ${CATKIN_DEVEL_PREFIX}")
message(STATUS "--")

set (FMU_BUILD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/build/${TARGET_FMU})
message(STATUS "FMU_BUILD_DIR: ${FMU_BUILD_DIR}")
set(TARGET_FMU_SOURCES_PATH "${CMAKE_CURRENT_SOURCE_DIR}")
file(GLOB FMU_SOURCES "${TARGET_FMU_SOURCES_PATH}/*.c" "${TARGET_FMU_SOURCES_PATH}/*.cpp")
add_library(${TARGET_FMU} SHARED ${FMU_SOURCES})

target_link_libraries(${TARGET_FMU} ${catkin_LIBRARIES})
add_dependencies(${TARGET_FMU} beginner_tutorials_gencpp)

set(FMU_EXPORT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/fmu")
if(NOT EXISTS ${FMU_EXPORT_PATH})
    message(STATUS "making directory ${FMU_EXPORT_PATH}")
    file(MAKE_DIRECTORY ${FMU_EXPORT_PATH})
endif()

message(STATUS "FMU_EXPORT_PATH: ${FMU_EXPORT_PATH}")

set(FMU_DLL_PATH "${CATKIN_DEVEL_PREFIX}/bin")

add_custom_command(TARGET ${TARGET_FMU} COMMAND
  ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/modelDescription.xml" "modelDescription.xml")
add_custom_command(TARGET ${TARGET_FMU} COMMAND
  ${CMAKE_COMMAND} -E copy "${FMU_DLL_PATH}/${TARGET_FMU}.dll" "binaries/${FMU_BINARY_DIR}/${TARGET_FMU}.dll")
add_custom_command(TARGET ${TARGET_FMU} COMMAND
  ${CMAKE_COMMAND} -E tar "cfv" "${FMU_EXPORT_PATH}/${TARGET_FMU}.fmu" --format=zip
  "modelDescription.xml" "binaries/${FMU_BINARY_DIR}/${TARGET_FMU}.dll")
